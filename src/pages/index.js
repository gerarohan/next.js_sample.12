import Head from "next/head";
import styles from "../styles/Home.module.css";
import Image from "next/image";

import Banner from "../components/banner";
import Card from "../components/card";
import { FetchCoffeeStoreApi } from "../../lib/coffee-store-api";
import useTrackLocation from "../../hooks/use-track-location";
import { useEffect, useState } from "react";

export async function getStaticProps(context) {
  const coffeeStores = await FetchCoffeeStoreApi();
  return {
    props: {
      coffeeStores,
    },
  };
}

export default function Home(props) {
  const { handleTrackLocation, latLong, locationErrorMsg, isFindingLoading } =
    useTrackLocation();

  console.log({ latLong, locationErrorMsg });

  const [getCoffeeStores, setGetCoffeeStores] = useState("");

  useEffect(async () => {
    // debugger
    if (latLong) {
      try {
        const FetchCoffeeStoreLocationApi = await FetchCoffeeStoreApi(
          latLong,
          6
        );
        // console.log({ FetchCoffeeStoreLocationApi });
        setGetCoffeeStores(FetchCoffeeStoreLocationApi);
        // debugger;
      } catch (error) {
        console.log("Error", { error });
      }
    }
  }, [latLong]);

  function handleOnBannerBtnClick() {
    console.log("test on banner button");
    handleTrackLocation();
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Spider verse</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Banner
          buttonText={isFindingLoading ? "Loading.." : "View"}
          handleOnClick={handleOnBannerBtnClick}
        />
        {locationErrorMsg && <p>Something went wrong: {locationErrorMsg}</p>}
        {/* <div className={styles.heroImage}>
          <Image src="/static/hero-image.png" width={700} height={400} />
        </div> */}
        {getCoffeeStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Bristol coffee stores</h2>
            <div className={styles.cardLayout}>
              {getCoffeeStores.map((store) => {
                return (
                  <Card
                    className={styles.card}
                    key={store.id}
                    name={store.name}
                    imgUrl={store.link}
                    href={`/coffee-store/${store.id}`}
                  />
                );
              })}
            </div>
          </div>
        )}
        {props.coffeeStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Stores near me</h2>
            <div className={styles.cardLayout}>
              {props.coffeeStores.map((store) => {
                return (
                  <Card
                    className={styles.card}
                    key={store.id}
                    name={store.name}
                    imgUrl={store.link}
                    href={`/coffee-store/${store.id}`}
                  />
                );
              })}
            </div>
          </div>
        )}
      </main>
    </div>
  );
}
